# Welcome to Serverless!
#
# See https://github.com/AnomalyInnovations/serverless-stack-demo-api

service: my-expirations-check

provider:
  name: aws
  runtime: nodejs8.10

  stage: dev
  region: eu-central-1

  # 'iamRoleStatement' defines the permission policy for the Lambda function.
  # In this case Lambda functions are granted with permissions to access DynamoDB.
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      # allow access to all DynamoDB tables in the same region - TODO: this should be fixed and allow only to specific table
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:*"
  
  # Load environment variables externally from 'env.yml' depending on the stage
  environment: ${file(env.yml):${self:provider.stage}}

functions:
  check:
    handler: handler.check
    events:
      - http:
          path: check
          method: GET
          cors: true
          authorizer: aws_iam
      - schedule: rate(10 minutes)

  api:
    handler: handler.api
    events:
      - http:
          path: list
          method: GET
          cors: true
          authorizer: aws_iam
      - http:
          path: add
          method: POST
          cors: true
          authorizer: aws_iam
      - http:
          path: delete
          method: POST
          cors: true
          authorizer: aws_iam    
      
# you can add CloudFormation resource templates here
# resources:
#   Resources:
#     expirationsTable:
#       Type: AWS::DynamoDB::Table
#       Properties:
#         TableName: ${self:service}-${self:provider.stage}-expirations
#         AttributeDefinitions:
#           - AttributeName: type
#             AttributeType: S
#           - AttributeName: type
#             AttributeType: S  
#         KeySchema:
#           - AttributeName: type
#             KeyType: HASH
#         ProvisionedThroughput:
#           ReadCapacityUnits: 1
#           WriteCapacityUnits: 1
